apiVersion: v1
kind: Namespace
metadata:
  name: nsolid
---
apiVersion: v1
kind: ServiceList
items:
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: nsolid
      name: registry
    spec:
      ports:
        - port: 80
          targetPort: clientport
      selector:
        app: registry
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: nsolid
      name: hub
    spec:
      sessionAffinity: None
      ports:
        - port: 80
          targetPort: hub
      selector:
        app: proxy
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: nsolid
      name: console
    spec:
      sessionAffinity: ClientIP
      ports:
        - port: 80
          targetPort: console
      selector:
        app: console
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: nsolid
      name: nginx-secure-proxy
      labels:
        app: nginx-secure-proxy
    spec:
      type: LoadBalancer
      sessionAffinity: ClientIP
      ports:
        - name: http
          protocol: TCP
          port: 80
          targetPort: 80
        - name: https
          protocol: TCP
          port: 443
          targetPort: 443
      selector:
        app: nginx-secure-proxy
---
apiVersion: extensions/v1beta1
kind: DeploymentList
items:
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      namespace: nsolid
      labels:
        app: registry
      name: registry
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: registry
        spec:
          containers:
          - image: nodesource/nsolid-registry
            name: registry
            ports:
            - containerPort: 2380
              name: serverport
            - containerPort: 2379
              name: clientport
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      namespace: nsolid
      name: console
      labels:
        app: console
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: console
        spec:
          containers:
            - name: console
              image: "nodesource/nsolid-console:v1.7.3"
              args:
                - --hub=http://hub:80
              ports:
                - containerPort: 3000
                  name: console
                - containerPort: 8000
                  name: nsolid
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      namespace: nsolid
      name: hub
      labels:
        app: hub
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: proxy
        spec:
          containers:
            - name: proxy
              image: "nodesource/nsolid-hub:v4.0.0"
              args:
                - --registry=registry:80
              ports:
                - containerPort: 9000
                  name: hub
                - containerPort: 8000
                  name: nsolid
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      namespace: nsolid
      labels:
        app: nginx-secure-proxy
      name: nginx-secure-proxy
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: nginx-secure-proxy
        spec:
          containers:
          - image: nginx
            imagePullPolicy: Always
            name: nginx-secure-proxy
            ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
            volumeMounts:
            - mountPath: /etc/nginx/
              name: nginx-config
            - mountPath: /etc/nginx/ssl/
              name: nginx-tls
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 1
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 5
              timeoutSeconds: 1
          restartPolicy: Always
          volumes:
          - name: nginx-tls
            secret:
              secretName: nginx-tls
          - name: nginx-config
            configMap:
              name: nginx-config